// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in = load, sel = address[9..11], a = aRAM512load, b = bRAM512load, c = cRAM512load, d = dRAM512load, e = eRAM512load, f = fRAM512load, g = gRAM512load, h = hRAM512load);

    RAM512(in = in, load = aRAM512load, address = address[0..8], out = aRAM512out);
    RAM512(in = in, load = bRAM512load, address = address[0..8], out = bRAM512out);
    RAM512(in = in, load = cRAM512load, address = address[0..8], out = cRAM512out);
    RAM512(in = in, load = dRAM512load, address = address[0..8], out = dRAM512out);
    RAM512(in = in, load = eRAM512load, address = address[0..8], out = eRAM512out);
    RAM512(in = in, load = fRAM512load, address = address[0..8], out = fRAM512out);
    RAM512(in = in, load = gRAM512load, address = address[0..8], out = gRAM512out);
    RAM512(in = in, load = hRAM512load, address = address[0..8], out = hRAM512out);

    Mux8Way16(a = aRAM512out, b = bRAM512out, c = cRAM512out, d = dRAM512out, e = eRAM512out, f = fRAM512out, g = gRAM512out, h = hRAM512out, sel = address[9..11], out = out);
}